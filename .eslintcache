[{"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js":"1","E:\\Github\\Learning-Activity-Designer-App\\src\\App.js":"2","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SharedDocContext.js":"3","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js":"4","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js":"5","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js":"6","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\DesignContext.js":"7","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\UiContext.js":"8","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js":"9","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js":"10","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js":"11","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\designReducer.js":"12","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js":"13","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js":"14","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ConfirmationModal.js":"15","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js":"16","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js":"17","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js":"18","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\MyDesignsPage.js":"19","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\SharedWithMe\\SharedWithMePage.js":"20","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\PublicRepository\\PublicRepositoryPage.js":"21","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\UserProfile.js":"22","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\SearchUsersPage\\SearchUsersPage.js":"23","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js":"24","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\uiReducer.js":"25","E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js":"26","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js":"27","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js":"28","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\FolderModal.js":"29","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js":"30","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js":"31","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js":"32","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js":"33","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js":"34","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\index.js":"35","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\EditProfileModal.js":"36","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\ShowContactsModal.js":"37","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\DesignMetadata.js":"38","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\DesignWorkspace.js":"39","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\LeftPanel.js":"40","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\RecentDesigns.js":"41","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\DesignsBreadcrumbs.js":"42","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ShareModal.js":"43","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js":"44","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js":"45","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js":"46","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\design.js":"47","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\ui.js":"48","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PieGraphic.js":"49","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js":"50","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\SharedTextFieldTipTapEditor.js":"51","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResultModal.js":"52","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResult.js":"53","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\LearningActivity.js":"54","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js":"55","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js":"56","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js":"57","E:\\Github\\Learning-Activity-Designer-App\\src\\assets\\resource\\items.js":"58","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PlaceHolder.js":"59","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomVerbList.js":"60","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomPiramid.js":"61","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\Task.js":"62","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js":"63","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js":"64","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js":"65","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js":"66","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js":"67"},{"size":204,"mtime":1615837840022,"results":"68","hashOfConfig":"69"},{"size":1158,"mtime":1617306640753,"results":"70","hashOfConfig":"69"},{"size":2012,"mtime":1617306640756,"results":"71","hashOfConfig":"69"},{"size":2729,"mtime":1615837852224,"results":"72","hashOfConfig":"69"},{"size":1091,"mtime":1615837852224,"results":"73","hashOfConfig":"69"},{"size":3149,"mtime":1617306672648,"results":"74","hashOfConfig":"69"},{"size":867,"mtime":1615837852225,"results":"75","hashOfConfig":"69"},{"size":1087,"mtime":1617306907483,"results":"76","hashOfConfig":"69"},{"size":651,"mtime":1615837840030,"results":"77","hashOfConfig":"69"},{"size":705,"mtime":1615837840030,"results":"78","hashOfConfig":"69"},{"size":1380,"mtime":1615837852224,"results":"79","hashOfConfig":"69"},{"size":5875,"mtime":1617306672822,"results":"80","hashOfConfig":"69"},{"size":1331,"mtime":1615837852240,"results":"81","hashOfConfig":"69"},{"size":1199,"mtime":1615837852226,"results":"82","hashOfConfig":"69"},{"size":3479,"mtime":1617315590158,"results":"83","hashOfConfig":"69"},{"size":8732,"mtime":1617306640755,"results":"84","hashOfConfig":"69"},{"size":620,"mtime":1615837840014,"results":"85","hashOfConfig":"69"},{"size":585,"mtime":1615837852233,"results":"86","hashOfConfig":"69"},{"size":6815,"mtime":1617317579732,"results":"87","hashOfConfig":"69"},{"size":2085,"mtime":1617306640761,"results":"88","hashOfConfig":"69"},{"size":1339,"mtime":1617306640761,"results":"89","hashOfConfig":"69"},{"size":11853,"mtime":1617306640762,"results":"90","hashOfConfig":"69"},{"size":6083,"mtime":1615837852237,"results":"91","hashOfConfig":"69"},{"size":8018,"mtime":1617308733125,"results":"92","hashOfConfig":"69"},{"size":1262,"mtime":1617306939571,"results":"93","hashOfConfig":"69"},{"size":1220,"mtime":1615837840031,"results":"94","hashOfConfig":"69"},{"size":3119,"mtime":1615838097093,"results":"95","hashOfConfig":"69"},{"size":1357,"mtime":1616430355923,"results":"96","hashOfConfig":"69"},{"size":4477,"mtime":1617306640760,"results":"97","hashOfConfig":"69"},{"size":472,"mtime":1615837852239,"results":"98","hashOfConfig":"69"},{"size":642,"mtime":1615837852223,"results":"99","hashOfConfig":"69"},{"size":4342,"mtime":1617306640755,"results":"100","hashOfConfig":"69"},{"size":322,"mtime":1615837840033,"results":"101","hashOfConfig":"69"},{"size":1989,"mtime":1617319572997,"results":"102","hashOfConfig":"69"},{"size":132,"mtime":1615837852240,"results":"103","hashOfConfig":"69"},{"size":10266,"mtime":1616430355908,"results":"104","hashOfConfig":"69"},{"size":2176,"mtime":1616962368145,"results":"105","hashOfConfig":"69"},{"size":20942,"mtime":1617308844298,"results":"106","hashOfConfig":"69"},{"size":14951,"mtime":1617320199197,"results":"107","hashOfConfig":"69"},{"size":2938,"mtime":1617317637508,"results":"108","hashOfConfig":"69"},{"size":2764,"mtime":1615837852236,"results":"109","hashOfConfig":"69"},{"size":2028,"mtime":1615837852235,"results":"110","hashOfConfig":"69"},{"size":10596,"mtime":1617308878069,"results":"111","hashOfConfig":"69"},{"size":555,"mtime":1617319568079,"results":"112","hashOfConfig":"69"},{"size":8822,"mtime":1617315629746,"results":"113","hashOfConfig":"69"},{"size":456,"mtime":1615837840017,"results":"114","hashOfConfig":"69"},{"size":594,"mtime":1617306672670,"results":"115","hashOfConfig":"69"},{"size":437,"mtime":1617310583745,"results":"116","hashOfConfig":"69"},{"size":1426,"mtime":1616702392263,"results":"117","hashOfConfig":"69"},{"size":3918,"mtime":1617306672647,"results":"118","hashOfConfig":"69"},{"size":11565,"mtime":1617306640755,"results":"119","hashOfConfig":"69"},{"size":5611,"mtime":1615837852230,"results":"120","hashOfConfig":"69"},{"size":2895,"mtime":1615837852230,"results":"121","hashOfConfig":"69"},{"size":11162,"mtime":1617315615454,"results":"122","hashOfConfig":"69"},{"size":236,"mtime":1615837852239,"results":"123","hashOfConfig":"69"},{"size":386,"mtime":1615837840033,"results":"124","hashOfConfig":"69"},{"size":3066,"mtime":1615837840014,"results":"125","hashOfConfig":"69"},{"size":1053,"mtime":1616702392262,"results":"126","hashOfConfig":"69"},{"size":1948,"mtime":1617306640755,"results":"127","hashOfConfig":"69"},{"size":1721,"mtime":1615837852227,"results":"128","hashOfConfig":"69"},{"size":2561,"mtime":1615837852227,"results":"129","hashOfConfig":"69"},{"size":17757,"mtime":1617315615466,"results":"130","hashOfConfig":"69"},{"size":962,"mtime":1615837852222,"results":"131","hashOfConfig":"69"},{"size":8600,"mtime":1615837852234,"results":"132","hashOfConfig":"69"},{"size":8479,"mtime":1616098130254,"results":"133","hashOfConfig":"69"},{"size":1532,"mtime":1615837852222,"results":"134","hashOfConfig":"69"},{"size":2355,"mtime":1615837840014,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"lsv2he",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js",[],["273","274"],"E:\\Github\\Learning-Activity-Designer-App\\src\\App.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SharedDocContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\DesignContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\UiContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\designReducer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ConfirmationModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\MyDesignsPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\SharedWithMe\\SharedWithMePage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\PublicRepository\\PublicRepositoryPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\UserProfile.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\SearchUsersPage\\SearchUsersPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\uiReducer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\FolderModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\index.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\EditProfileModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\ShowContactsModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\DesignMetadata.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\DesignWorkspace.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\LeftPanel.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\RecentDesigns.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\DesignsBreadcrumbs.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ShareModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\design.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\ui.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PieGraphic.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\SharedTextFieldTipTapEditor.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResultModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResult.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\LearningActivity.js",["275"],"import React, { useEffect, useRef } from 'react';\r\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, IconButton, makeStyles, Paper, Tooltip, Typography } from '@material-ui/core'\r\nimport { Task } from 'pages/DesignPage/Workspace/Task';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useSocketState } from 'contexts/SocketContext';\r\nimport { StackedBar } from 'components/StackedBar';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { useDesignState } from 'contexts/design/DesignContext';\r\nimport { SharedTextFieldTipTapEditor } from 'components/SharedTextFieldTipTapEditor';\r\nimport { ConfirmationModal } from 'components/ConfirmationModal';\r\nimport { useUiState } from 'contexts/ui/UiContext';\r\nimport types from 'types';\r\nimport { useSnackbar } from 'notistack';\r\nimport { itemsLearningType } from 'assets/resource/items'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    unitSpacing: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    titleUnitSpacing: {\r\n        display: 'flex',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    graphicUnitSpacing: {\r\n        width: '100%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    trashIcon: {\r\n        marginLeft: \"auto\",\r\n    },\r\n    spacingDescriptionlearningActivity: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    spacingDescription: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    spacingLinkedResults: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    buttonPos: {\r\n        marginTop: theme.spacing(1),\r\n        marginLeft: \"auto\",\r\n    },\r\n    gridTask: {\r\n        marginTop: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    learningResultList: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        flexDirection: 'column',\r\n        paddingLeft: 15,\r\n        maxHeight: 200,\r\n        overflow: 'auto',\r\n        overflowX: true,\r\n    }\r\n}));\r\n\r\nexport const LearningActivity = ({ index, learningActivity }) => {\r\n    const classes = useStyles();\r\n    const { designState } = useDesignState();\r\n    const { design } = designState;\r\n    const { socket } = useSocketState();\r\n    const { dispatch } = useUiState();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const titleRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const taskRefs = useRef([]);\r\n\r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        title: learningActivity.title,\r\n        description: learningActivity.description,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValues({\r\n            title: learningActivity.title,\r\n            description: learningActivity.description,\r\n        });\r\n    }, [design, setValues, learningActivity]);\r\n\r\n    const { title, description } = form;\r\n    \r\n    const handleDeleteUnit = () => {\r\n        if(title === \"\" && description === \"\" && learningActivity.learningResults.length === 0 && (learningActivity.tasks === undefined || learningActivity.tasks.length === 0)){\r\n            taskRefs?.current.forEach(task => task?.clearTexts());\r\n            titleRef?.current.clearText();\r\n            descriptionRef?.current.clearText();\r\n            socket.emit('delete-learningActivity', { designId: design._id, index });\r\n            enqueueSnackbar('Su actividad se ha eliminado',  {variant: 'success', autoHideDuration: 2000});\r\n        }else {\r\n            dispatch({\r\n                type: types.ui.setConfirmData,\r\n                payload: {\r\n                    type: 'actividad',\r\n                    args: { designId: design._id, index },\r\n                    actionMutation: null,\r\n                }\r\n            });\r\n            dispatch({\r\n                type: types.ui.toggleModal,\r\n                payload: 'Confirmation',\r\n            });\r\n        }\r\n    };\r\n    \r\n    const resetItems = () =>{\r\n        itemsLearningType.forEach((item) =>{\r\n            item.value = 0;\r\n        });\r\n    };\r\n\r\n    const handleAddTask = () => {\r\n        socket.emit('new-task', { designId: design._id, index });\r\n    };\r\n\r\n    const handleToggleLearningResult = (e, isSelected, result) => {\r\n        if(isSelected){\r\n            let indexLearningResults = 0;\r\n            learningActivity.learningResults.forEach((r, _indexLearningResults) => {\r\n                if (r.verb === result.verb && r.description === result.description) indexLearningResults = _indexLearningResults;\r\n            });\r\n            socket.emit('delete-learning-result-from-learningActivity', {\r\n                designId: design._id,\r\n                index,\r\n                indexLearningResults\r\n            });\r\n        }else{\r\n            socket.emit('add-learning-result-to-learningActivity', {\r\n                designId: design._id,\r\n                index,\r\n                result\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleEditLearningActivityField = ({ target }) => {\r\n        let field = target.name;\r\n        if(target.name.includes('title')) field = 'title';\r\n        else if (target.name.includes('description')) field = 'description';\r\n        socket.emit('edit-unit-field', { designId: design._id, index, field, value: target.value });\r\n        handleInputChange({ target: {...target, name: field} });\r\n    };\r\n\r\n    const listlearningActivityArray = () => {\r\n        return (\r\n            <Grid key={index}>\r\n                <Paper className={classes.unitSpacing}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={5} className={classes.titleUnitSpacing}>\r\n                            <SharedTextFieldTipTapEditor \r\n                                ref={titleRef}\r\n                                name={`title-learning-activity-${index}`} // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                placeholder='Título'\r\n                                initialvalue={title}\r\n                                onChange={handleEditLearningActivityField}\r\n                            />\r\n                        </Grid>\r\n                        {resetItems()}\r\n                        <Grid item xs={12} sm={7} className={classes.graphicUnitSpacing}>\r\n                            {   \r\n                                design.data.learningActivities[index] && design.data.learningActivities[index].tasks && design.data.learningActivities[index].tasks.forEach((task)=>\r\n                                {   \r\n                                    itemsLearningType.forEach((item) =>{ \r\n                                        if( item.title === task.learningType ){\r\n                                            item.value = item.value + 1;\r\n                                        }\r\n                                    });\r\n                                } \r\n                                )\r\n                            }\r\n                            <StackedBar items = {itemsLearningType} type = {'Activity'}/>\r\n                            <Tooltip title=\"Delete\">\r\n                                <IconButton onClick={handleDeleteUnit}>\r\n                                    <DeleteForeverIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sm={8}>\r\n                            <Grid className={classes.gridTask}>\r\n                                { \r\n                                    design.data.learningActivities[index] && design.data.learningActivities[index].tasks && design.data.learningActivities[index].tasks.map((task, i)=> <Task ref={(ref) => taskRefs.current.push(ref)} key={`task-${i}-learningActivity-${index}`} index={i} task={task} learningActivityIndex={index}/> ) \r\n                                }\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid item />\r\n                                <Grid item className={classes.buttonPos}>\r\n                                    <Button size=\"small\" variant=\"outlined\" onClick={handleAddTask}> Agregar Tarea </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Typography variant=\"body2\" className={classes.spacingDescriptionlearningActivity} color=\"textSecondary\"> Descripción Unidad de aprendizaje </Typography>\r\n                            <Grid className={classes.spacingDescription}>\r\n                                <SharedTextFieldTipTapEditor \r\n                                    ref={descriptionRef}\r\n                                    name={`description-learning-activity-${index}`} // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                    placeholder='Título'\r\n                                    initialvalue={description}\r\n                                    onChange={(e)=>handleEditLearningActivityField}\r\n                                    rowMax={3}\r\n                                    multiline\r\n                                    //deleteOnRemove\r\n                                />\r\n                            </Grid>\r\n                            <Typography variant=\"body2\" className={classes.spacingLinkedResults} color=\"textSecondary\"> Resultados Vinculados </Typography>\r\n                            <div className={classes.learningResultList}>\r\n                                {\r\n                                    design.metadata.results.map(result => (\r\n                                        <FormControlLabel\r\n                                            style={{width: '50%'}}\r\n                                            key={`learning-result-${result.verb}`}\r\n                                            control={\r\n                                                <Checkbox \r\n                                                    checked={!!learningActivity.learningResults.find(lr=> lr.verb === result.verb)} \r\n                                                    onChange={(e)=>handleToggleLearningResult(e, \r\n                                                        !!learningActivity.learningResults.find(lr=> lr.verb === result.verb),\r\n                                                        result\r\n                                                    )} \r\n                                                />\r\n                                            }\r\n                                            label={result.verb}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                listlearningActivityArray()\r\n            }\r\n        </>\r\n    )\r\n}\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\assets\\resource\\items.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PlaceHolder.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomVerbList.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomPiramid.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\Task.js",["276"],"import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\r\nimport { Grid, IconButton, makeStyles, Typography, Tooltip, Paper, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useSocketState } from 'contexts/SocketContext';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { useDesignState } from 'contexts/design/DesignContext';\r\nimport { SharedTextFieldTipTapEditor } from 'components/SharedTextFieldTipTapEditor';\r\nimport { ConfirmationModal } from 'components/ConfirmationModal';\r\nimport { useUiState } from 'contexts/ui/UiContext';\r\nimport types from 'types';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    taskSpacing: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    trashIcon: {\r\n        display: 'flex',\r\n    },\r\n    tasksSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        background: theme.palette.background.workSpace\r\n    },\r\n    taskSpacingDescription: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    taskSpacingDescriptionBD: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    colorLearningType: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    timeField: {\r\n        marginRight: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nexport const Task = forwardRef(({ learningActivityIndex, index, task }, ref) => {\r\n    const classes = useStyles();\r\n    const { socket } = useSocketState();\r\n    const isMounted = useRef(true);\r\n    const hoursRef = useRef();\r\n    const minutesRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const { designState } = useDesignState();\r\n    const { design } = designState;\r\n    const { dispatch } = useUiState();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        description: task.description,\r\n        learningType: task.learningType && task.learningType.trim() !== '' ? task.learningType : 'Seleccionar',\r\n        modality: task.modality && task.modality.trim() !== '' ? task.modality :'Seleccionar',\r\n        format: task.format && task.format.trim() !== '' ? task.format :'Seleccionar',\r\n        timeHours: task.duration.hours ?? 0,\r\n        timeMinutes: task.duration.minutes ?? 0,\r\n    });\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            clearTexts: () => {\r\n                hoursRef?.current.clearText();\r\n                minutesRef?.current.clearText();\r\n                descriptionRef?.current.clearText();\r\n            }\r\n        }),\r\n    );\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.description !== task.description){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    description: task.description,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.description, task.description, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.learningType !== task.learningType){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    learningType: task.learningType && task.learningType.trim() !== '' ? task.learningType : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.learningType, task.learningType, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.modality !== task.modality){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    modality: task.modality && task.modality.trim() !== '' ? task.modality : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.modality, task.modality, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.format !== task.format){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    format: task.format && task.format.trim() !== '' ? task.format : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.format, task.format, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.timeHours !== task.duration.hours){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    timeHours: task.duration.hours ?? 0,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.timeHours, task.duration.hours, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.timeMinutes !== task.duration.minutes){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    timeMinutes: task.duration.minutes ?? 0,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.timeMinutes, task.duration.minutes, setValues]);\r\n    \r\n    const { description, learningType, modality, format, timeHours, timeMinutes,  } = form;\r\n    \r\n    const handleEditTaskField = ({ target }) => {\r\n        let { name: field, value } = target;\r\n        let subfield = null;\r\n        if(field.includes('description')) field = 'description';\r\n        else if (field.includes('timeHours')){\r\n            field = 'duration';\r\n            subfield = 'hours';\r\n            value = isNaN(value) ? 0 : value;\r\n        }else if (field.includes('timeMinutes')){\r\n            field = 'duration';\r\n            subfield = 'minutes';\r\n            value = isNaN(value) ? 0 : value;\r\n        }\r\n        handleInputChange({ target });\r\n        socket.emit('edit-task-field', { designId: design._id, learningActivityIndex, index, field, value, subfield });\r\n    };\r\n    \r\n    const handleDeleteTask = (index) => {\r\n        if (description === \"\" && learningType === 'Seleccionar' && modality === 'Seleccionar' && format === 'Seleccionar' && timeHours === 0 && timeMinutes === 0 ){\r\n            hoursRef?.current.clearText();\r\n            minutesRef?.current.clearText();\r\n            descriptionRef?.current.clearText();\r\n            socket.emit('delete-task', { designId: design._id, learningActivityIndex, index });\r\n            enqueueSnackbar('Su tarea se ha eliminado',  {variant: 'success', autoHideDuration: 2000});\r\n        } else {\r\n            dispatch({\r\n                type: types.ui.setConfirmData,\r\n                payload: {\r\n                    type: 'tarea',\r\n                    args: { designId: design._id, learningActivityIndex, index },\r\n                    actionMutation: null,\r\n                }\r\n            })\r\n            dispatch({\r\n                type: types.ui.toggleModal,\r\n                payload: 'Confirmation',\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleChangeDropdown = (e) => {\r\n        handleInputChange(e);\r\n        socket.emit('edit-task-field', { designId: design._id, learningActivityIndex, index, field: e.target.name, value: e.target.value, subfield: null });\r\n    };\r\n\r\n    const listTasksArray = () => {\r\n        return (\r\n            <Grid key={index}>\r\n                <Paper square className={classes.tasksSpacing}>\r\n                    <Grid container >\r\n                        <Grid item xs={1}>\r\n                            {(() => {\r\n                                if (task.learningType === 'Investigación') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#57A8E7' }}></div>\r\n                                    )\r\n                                } else if (task.learningType === 'Adquisición') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#E95D5D' }}></div>\r\n                                    )\r\n                                }else if (task.learningType === 'Producción') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#C8951F' }}></div>\r\n                                    )\r\n                                }else if (task.learningType === 'Discusión') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#087A4C' }}></div>\r\n                                    )\r\n                                }else if (task.learningType === 'Colaboración') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#DFDF3F' }}></div>\r\n                                    )\r\n                                }else if (task.learningType === 'Práctica') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#A75BCD' }}></div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <Grid container className={classes.taskSpacing}>\r\n                                <Grid item xs={12} sm={5}>\r\n                                    <FormControl variant='outlined' size='small' style={{width: '90%'}}>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" > Aprendizaje </Typography>\r\n                                        <Select\r\n                                            name='learningType'\r\n                                            value={learningType}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Investigación'}> Investigación </MenuItem>\r\n                                            <MenuItem value={'Adquisición'}> Adquisición </MenuItem>\r\n                                            <MenuItem value={'Producción'}> Producción </MenuItem>\r\n                                            <MenuItem value={'Discusión'}> Discusión </MenuItem>\r\n                                            <MenuItem value={'Colaboración'}> Colaboración </MenuItem>\r\n                                            <MenuItem value={'Práctica'}> Práctica </MenuItem>\r\n                                            \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} className={classes.grid} style={{justifyContent: 'space-between'}}>\r\n                                    <FormControl variant='outlined' size='small' style={{width: '90%'}}>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" > Modalidad </Typography>\r\n                                        <Select\r\n                                            name='modality'\r\n                                            value={modality}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Presencial-Asíncrono'}> Presencial-Asíncrono</MenuItem>\r\n                                            <MenuItem value={'Presencial-Síncrono'}> Presencial-Síncrono</MenuItem>\r\n                                            <MenuItem value={'Online-Asíncrono'}> Online-Asíncrono</MenuItem>\r\n                                            <MenuItem value={'Online-Síncrono'}> Online-Síncrono</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Tooltip title=\"Delete\">\r\n                                        <IconButton onClick={() => handleDeleteTask(index)}>\r\n                                            <DeleteForeverIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container className={classes.taskSpacing}>\r\n                                <Grid item xs={12} sm={6} className={classes.grid}>\r\n                                    <div style={{ width: '100%' }}>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\"> Tiempo de trabajo </Typography>\r\n                                        <div className={classes.timeField}>\r\n                                            <SharedTextFieldTipTapEditor \r\n                                                ref={hoursRef} \r\n                                                name={`timeHours-task-${index}-learning-activity-${learningActivityIndex}`} // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                                placeholder='Horas'\r\n                                                initialvalue={timeHours}\r\n                                                onChange={handleEditTaskField}\r\n                                                type='number'\r\n                                                min={0}\r\n                                                //deleteOnRemove\r\n                                            />\r\n                                            <Typography style={{ marginLeft: 10, marginRight: 10 }}> : </Typography>\r\n                                            <SharedTextFieldTipTapEditor \r\n                                                ref={minutesRef}\r\n                                                name={`timeMinutes-task-${index}-learning-activity-${learningActivityIndex}`} // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                                placeholder='Minutos'\r\n                                                initialvalue={timeMinutes}\r\n                                                onChange={handleEditTaskField}\r\n                                                type='number'\r\n                                                min={0}\r\n                                                max={59}\r\n                                                //deleteOnRemove\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} className={classes.grid}>\r\n                                        <FormControl variant='outlined' size='small' style={{width: '90%', marginRight: 5}}>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" style={{marginBottom: 4, marginRight: 5}}> Formato </Typography>\r\n                                            <Select\r\n                                                name='format'\r\n                                                value={format}\r\n                                                onChange={handleChangeDropdown}\r\n                                            >\r\n                                                <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                                <MenuItem value={'Grupal'}> Grupal</MenuItem>\r\n                                                <MenuItem value={'Individual'}> Individual</MenuItem>\r\n                                                <MenuItem value={'Toda la clase'}> Toda la clase</MenuItem>\r\n                                            </Select>    \r\n                                        </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container className={classes.taskSpacingDescription}>\r\n                                <Grid item sm={11}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" > Descripción </Typography>\r\n                                    <Grid className={classes.taskSpacingDescriptionBD}>\r\n                                        <SharedTextFieldTipTapEditor \r\n                                            ref={descriptionRef}\r\n                                            name={`description-task-${index}-learning-activity-${learningActivityIndex}`} // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                            placeholder='Descripción'\r\n                                            initialvalue={description}\r\n                                            onChange={handleEditTaskField}\r\n                                            multiline\r\n                                            //deleteOnRemove\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listTasksArray()\r\n            }\r\n        </>\r\n    )\r\n})\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js",[],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":10,"column":10,"nodeType":"283","messageId":"284","endLine":10,"endColumn":27},{"ruleId":"281","severity":1,"message":"282","line":8,"column":10,"nodeType":"283","messageId":"284","endLine":8,"endColumn":27},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'ConfirmationModal' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]