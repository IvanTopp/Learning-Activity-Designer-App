[{"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js":"1","E:\\Github\\Learning-Activity-Designer-App\\src\\App.js":"2","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UiContext.js":"3","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js":"4","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js":"5","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js":"6","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js":"7","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js":"8","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js":"9","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js":"10","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js":"11","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js":"12","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\AuthService.js":"13","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\UserProfile.js":"14","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\MyDesigns\\MyDesignsPage.js":"15","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\PublicRepository\\PublicRepositoryPage.js":"16","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SearchUsersPage\\SearchUsersPage.js":"17","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SharedWithMe\\SharedWithMePage.js":"18","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js":"19","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js":"20","E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js":"21","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js":"22","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\ShowContactsModal.js":"23","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\EditProfileModal.js":"24","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js":"25","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\MyDesigns\\RecentDesigns.js":"26","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js":"27","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js":"28","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js":"29","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js":"30","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js":"31","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignMetadata.js":"32","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignWorkspace.js":"33","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js":"34","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js":"35","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js":"36","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js":"37","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js":"38","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js":"39","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js":"40","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js":"41","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\LearningResultModal.js":"42","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignUnit.js":"43","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignGraphic.js":"44","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js":"45","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\BloomVerbList.js":"46","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\BloomPiramid.js":"47","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js":"48","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignActivity.js":"49","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js":"50","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js":"51","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js":"52","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\LearningResult.js":"53"},{"size":204,"mtime":1612307245561,"results":"54","hashOfConfig":"55"},{"size":753,"mtime":1613686004470,"results":"56","hashOfConfig":"55"},{"size":658,"mtime":1615496264574,"results":"57","hashOfConfig":"55"},{"size":638,"mtime":1613686004491,"results":"58","hashOfConfig":"55"},{"size":2654,"mtime":1614360686527,"results":"59","hashOfConfig":"55"},{"size":1446,"mtime":1614360686524,"results":"60","hashOfConfig":"55"},{"size":651,"mtime":1613076522498,"results":"61","hashOfConfig":"55"},{"size":1374,"mtime":1612557670562,"results":"62","hashOfConfig":"55"},{"size":705,"mtime":1612307245565,"results":"63","hashOfConfig":"55"},{"size":526,"mtime":1613686004498,"results":"64","hashOfConfig":"55"},{"size":7612,"mtime":1615406370641,"results":"65","hashOfConfig":"55"},{"size":620,"mtime":1613405014474,"results":"66","hashOfConfig":"55"},{"size":1630,"mtime":1613406816749,"results":"67","hashOfConfig":"55"},{"size":11055,"mtime":1615581787818,"results":"68","hashOfConfig":"55"},{"size":8514,"mtime":1614799135110,"results":"69","hashOfConfig":"55"},{"size":3929,"mtime":1614799135110,"results":"70","hashOfConfig":"55"},{"size":6095,"mtime":1614799135110,"results":"71","hashOfConfig":"55"},{"size":3926,"mtime":1614799135111,"results":"72","hashOfConfig":"55"},{"size":4797,"mtime":1615058927831,"results":"73","hashOfConfig":"55"},{"size":553,"mtime":1614360686525,"results":"74","hashOfConfig":"55"},{"size":1220,"mtime":1613405014628,"results":"75","hashOfConfig":"55"},{"size":1508,"mtime":1615581772754,"results":"76","hashOfConfig":"55"},{"size":2156,"mtime":1615581146244,"results":"77","hashOfConfig":"55"},{"size":10112,"mtime":1615582794209,"results":"78","hashOfConfig":"55"},{"size":1462,"mtime":1614375913288,"results":"79","hashOfConfig":"55"},{"size":2782,"mtime":1614360686526,"results":"80","hashOfConfig":"55"},{"size":3296,"mtime":1615496264573,"results":"81","hashOfConfig":"55"},{"size":324,"mtime":1613406816750,"results":"82","hashOfConfig":"55"},{"size":3027,"mtime":1613406816742,"results":"83","hashOfConfig":"55"},{"size":953,"mtime":1613406816742,"results":"84","hashOfConfig":"55"},{"size":668,"mtime":1614367026893,"results":"85","hashOfConfig":"55"},{"size":17174,"mtime":1614965865214,"results":"86","hashOfConfig":"55"},{"size":9940,"mtime":1615058927833,"results":"87","hashOfConfig":"55"},{"size":8262,"mtime":1612307296411,"results":"88","hashOfConfig":"55"},{"size":8219,"mtime":1612557338298,"results":"89","hashOfConfig":"55"},{"size":322,"mtime":1613405014656,"results":"90","hashOfConfig":"55"},{"size":1157,"mtime":1614539142182,"results":"91","hashOfConfig":"55"},{"size":456,"mtime":1614360686524,"results":"92","hashOfConfig":"55"},{"size":1635,"mtime":1614360686524,"results":"93","hashOfConfig":"55"},{"size":3066,"mtime":1613405014379,"results":"94","hashOfConfig":"55"},{"size":8386,"mtime":1614965865212,"results":"95","hashOfConfig":"55"},{"size":5319,"mtime":1614965865213,"results":"96","hashOfConfig":"55"},{"size":8207,"mtime":1615058927832,"results":"97","hashOfConfig":"55"},{"size":7548,"mtime":1614367026894,"results":"98","hashOfConfig":"55"},{"size":2355,"mtime":1612307245558,"results":"99","hashOfConfig":"55"},{"size":1796,"mtime":1614965865212,"results":"100","hashOfConfig":"55"},{"size":2461,"mtime":1614965865212,"results":"101","hashOfConfig":"55"},{"size":2187,"mtime":1614965865213,"results":"102","hashOfConfig":"55"},{"size":14121,"mtime":1615058927827,"results":"103","hashOfConfig":"55"},{"size":545,"mtime":1614965865215,"results":"104","hashOfConfig":"55"},{"size":386,"mtime":1614360686528,"results":"105","hashOfConfig":"55"},{"size":274,"mtime":1614360686527,"results":"106","hashOfConfig":"55"},{"size":1597,"mtime":1614965865213,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"lsv2he",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js",[],["217","218"],"E:\\Github\\Learning-Activity-Designer-App\\src\\App.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UiContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\AuthService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\UserProfile.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\MyDesigns\\MyDesignsPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\PublicRepository\\PublicRepositoryPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SearchUsersPage\\SearchUsersPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SharedWithMe\\SharedWithMePage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\ShowContactsModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\UserProfile\\EditProfileModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\MyDesigns\\RecentDesigns.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignMetadata.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignWorkspace.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\LearningResultModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignUnit.js",["219","220"],"import { Box, Button, Checkbox, Divider, FormControlLabel, Grid, IconButton, makeStyles, Paper, TextField, Tooltip, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DesignActivity } from './DesignActivity';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useSocketState } from '../../contexts/SocketContext';\r\nimport { StackedBar } from '../../components/StackedBar';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    unitSpacing: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    titleUnitSpacing: {\r\n        display: 'flex',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    graphicUnitSpacing: {\r\n        width: '100%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    trashIcon: {\r\n        marginLeft: \"auto\",\r\n    },\r\n    spacingDescriptionTLA: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    spacingDescription: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    spacingLinkedResults: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    buttonPos: {\r\n        marginTop: theme.spacing(1),\r\n        marginLeft: \"auto\",\r\n    },\r\n    gridActivity: {\r\n        marginTop: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    learningResultList: {\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        flexDirection: 'column',\r\n        paddingLeft: 15,\r\n        maxHeight: 200,\r\n        overflow: 'auto',\r\n        overflowX: true,\r\n    }\r\n}));\r\n\r\nexport const DesignUnit = ({ design, index, tla }) => {\r\n    const classes = useStyles();\r\n    const { socket } = useSocketState();\r\n\r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        title: tla.title,\r\n        description: tla.description,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValues({\r\n            title: tla.title,\r\n            description: tla.description,\r\n        });\r\n    }, [design, setValues, tla]);\r\n\r\n    const { title, description } = form;\r\n\r\n    const editUnit = ({target}) => {\r\n        socket.emit('edit-unit-field', { designId: design._id, index, field: target.name, value: form[target.name] });\r\n    };\r\n\r\n    const handleDeleteUnit = () => {\r\n        socket.emit('delete-tla', { designId: design._id, index });\r\n    };\r\n\r\n    const handleAddActivity = () => {\r\n        socket.emit('new-activity', { designId: design._id, index });\r\n    };\r\n\r\n    const handleToggleLearningResult = (e, isSelected, result) => {\r\n        if(isSelected){\r\n            let indexLearningResults = 0;\r\n            tla.learningResults.forEach((r, _indexLearningResults) => {\r\n                if (r.verb === result.verb && r.description === result.description) indexLearningResults = _indexLearningResults;\r\n            });\r\n\r\n            socket.emit('delete-learning-result-from-tla', {\r\n                designId: design._id,\r\n                index,\r\n                indexLearningResults\r\n            });\r\n        }else{\r\n            socket.emit('add-learning-result-to-tla', {\r\n                designId: design._id,\r\n                index,\r\n                result\r\n            });\r\n        }\r\n    };\r\n\r\n    const listTlaArray = () => {\r\n        return (\r\n            <Grid key={index}>\r\n                <Paper className={classes.unitSpacing}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={5} className={classes.titleUnitSpacing}>\r\n                            <TextField\r\n                                margin='dense'\r\n                                variant=\"outlined\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                onChange={handleInputChange}\r\n                                type=\"text\"\r\n                                onBlur={editUnit}\r\n                                inputProps={{ maxLength: 30 }}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={7} className={classes.graphicUnitSpacing}>\r\n                            <StackedBar />\r\n                            <Tooltip title=\"Delete\">\r\n                                <IconButton onClick={handleDeleteUnit}>\r\n                                    <DeleteForeverIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid container spacing={2} >\r\n                        <Grid item xs={12} sm={8}>\r\n                            <Grid className={classes.gridActivity}>\r\n                                { \r\n                                    design.data.tlas[index] && design.data.tlas[index].activities.map((activity, i)=> <DesignActivity key={`activity-${i}-tla-${index}`} design={design} index={i} activity={activity} tlaIndex={index}/> ) \r\n                                }\r\n                            </Grid>\r\n                            <Grid container>\r\n                                <Grid item />\r\n                                <Grid item className={classes.buttonPos}>\r\n                                    <Button size=\"small\" variant=\"outlined\" onClick={handleAddActivity}> Agregar Tarea </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Typography variant=\"body2\" className={classes.spacingDescriptionTLA} color=\"textSecondary\"> Descripción Unidad de aprendizaje </Typography>\r\n                            <Grid className={classes.spacingDescription}>\r\n                                <TextField\r\n                                    multiline\r\n                                    margin='dense'\r\n                                    variant=\"outlined\"\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                    onChange={handleInputChange}\r\n                                    type=\"text\"\r\n                                    onBlur={editUnit}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Typography variant=\"body2\" className={classes.spacingLinkedResults} color=\"textSecondary\"> Resultados Vinculados </Typography>\r\n                            <div className={classes.learningResultList}>\r\n                                {\r\n                                    design.metadata.results.map(result => (\r\n                                        <FormControlLabel\r\n                                            style={{width: '50%'}}\r\n                                            key={`learning-result-${result.verb}`}\r\n                                            control={\r\n                                                <Checkbox \r\n                                                    checked={!!tla.learningResults.find(lr=> lr.verb === result.verb)} \r\n                                                    onChange={(e)=>handleToggleLearningResult(e, \r\n                                                        !!tla.learningResults.find(lr=> lr.verb === result.verb),\r\n                                                        result\r\n                                                    )} \r\n                                                />\r\n                                            }\r\n                                            label={result.verb}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                listTlaArray()\r\n            }\r\n        </>\r\n    )\r\n}\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignGraphic.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\BloomVerbList.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\BloomPiramid.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignActivity.js",["221"],"import React, { useEffect, useState } from 'react'\r\nimport { Grid, IconButton, makeStyles, Typography, Tooltip, Paper, TextField, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useSocketState } from '../../contexts/SocketContext';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport TimeFormatter from '../../utils/timeFormatters';\r\nconst useStyles = makeStyles((theme) => ({\r\n    activitySpacing: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    trashIcon: {\r\n        display: 'flex',\r\n    },\r\n    activitiesSpacing: {\r\n        marginTop: theme.spacing(1),\r\n        background: theme.palette.background.workSpace\r\n    },\r\n    activitySpacingDescription: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    activitySpacingDescriptionBD: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    colorLearningType: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    timeField: {\r\n        marginRight: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nexport const DesignActivity = ({ design, tlaIndex, index, activity }) => {\r\n    const classes = useStyles();\r\n    const { socket } = useSocketState();\r\n\r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        description: activity.description,\r\n        learningType: activity.learningType ? activity.learningType : 'Seleccionar',\r\n        modality: activity.modality ? activity.modality :'Seleccionar',\r\n        format: activity.format ? activity.format :'Seleccionar',\r\n        timeHours: TimeFormatter.toHoursAndMinutes(activity.duration)[0],\r\n        timeMinutes: TimeFormatter.toHoursAndMinutes(activity.duration)[1],\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValues({\r\n            description: activity.description,\r\n            learningType: activity.learningType ? activity.learningType : 'Seleccionar',\r\n            modality: activity.modality ? activity.modality :'Seleccionar',\r\n            format: activity.format ? activity.format :'Seleccionar',\r\n            timeHours: TimeFormatter.toHoursAndMinutes(activity.duration)[0],\r\n            timeMinutes: TimeFormatter.toHoursAndMinutes(activity.duration)[1],\r\n        });\r\n    }, [design, setValues, activity]);\r\n\r\n    const { description, learningType, modality, format, timeHours, timeMinutes,  } = form;\r\n\r\n    const editActivity = ({ target }) => {\r\n        if (target.name === 'timeHours' || target.name === 'timeMinutes') {\r\n            socket.emit('edit-activity-field', { designId: design._id, tlaIndex, index, field: 'duration', value: TimeFormatter.toMinutes(timeHours, timeMinutes) });\r\n        } else {\r\n            socket.emit('edit-activity-field', { designId: design._id, tlaIndex, index, field: target.name, value: form[target.name] });\r\n        }\r\n    };\r\n\r\n    const handleDeleteActivity = () => {\r\n        socket.emit('delete-activity', { designId: design._id, tlaIndex, index });\r\n    };\r\n\r\n    const handleChangeDropdown = (e) => {\r\n        handleInputChange(e);\r\n        socket.emit('edit-activity-field', { designId: design._id, tlaIndex, index, field: e.target.name, value: e.target.value });\r\n    };\r\n\r\n    const listActivitiesArray = () => {\r\n        return (\r\n            <Grid key={index}>\r\n                <Paper square className={classes.activitiesSpacing}>\r\n                    <Grid container >\r\n                        <Grid item xs={1}>\r\n                            {(() => {\r\n                                if (activity.learningType === 'Investigación') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#57A8E7' }}></div>\r\n                                    )\r\n                                } else if (activity.learningType === 'Adquisición') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#E95D5D' }}></div>\r\n                                    )\r\n                                }else if (activity.learningType === 'Producción') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#C8951F' }}></div>\r\n                                    )\r\n                                }else if (activity.learningType === 'Discusión') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#087A4C' }}></div>\r\n                                    )\r\n                                }else if (activity.learningType === 'Colaboración') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#DFDF3F' }}></div>\r\n                                    )\r\n                                }else if (activity.learningType === 'Práctica') {\r\n                                    return (\r\n                                        <div className={classes.colorLearningType} style={{ backgroundColor: '#A75BCD' }}></div>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <Grid container className={classes.activitySpacing}>\r\n                                <Grid item xs={12} sm={5}>\r\n                                    <FormControl variant='outlined' size='small' style={{width: '90%'}}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" > Aprendizaje </Typography>\r\n                                        <Select\r\n                                            name='learningType'\r\n                                            value={learningType}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Investigación'}> Investigación </MenuItem>\r\n                                            <MenuItem value={'Adquisición'}> Adquisición </MenuItem>\r\n                                            <MenuItem value={'Producción'}> Producción </MenuItem>\r\n                                            <MenuItem value={'Discusión'}> Discusión </MenuItem>\r\n                                            <MenuItem value={'Colaboración'}> Colaboración </MenuItem>\r\n                                            <MenuItem value={'Práctica'}> Práctica </MenuItem>\r\n                                            \r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} className={classes.grid} style={{justifyContent: 'space-between'}}>\r\n                                    <FormControl variant='outlined' size='small' style={{width: '90%'}}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" > Modalidad </Typography>\r\n                                        <Select\r\n                                            name='modality'\r\n                                            value={modality}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Presencial-Asincrono'}> Presencial-Asincrono</MenuItem>\r\n                                            <MenuItem value={'Presencial-Sincrono'}> Presencial-Sincrono</MenuItem>\r\n                                            <MenuItem value={'Online-Asincrono'}> Online-Asincrono</MenuItem>\r\n                                            <MenuItem value={'Online-Sincrono'}> Online-Sincrono</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Tooltip title=\"Delete\">\r\n                                        <IconButton onClick={() => handleDeleteActivity(index)}>\r\n                                            <DeleteForeverIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container className={classes.activitySpacing}>\r\n                                <Grid item xs={12} sm={6} className={classes.grid}>\r\n                                    <div style={{ width: '100%' }}>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\"> Tiempo de trabajo </Typography>\r\n                                        <div className={classes.timeField}>\r\n                                            <TextField\r\n                                                margin=\"dense\"\r\n                                                variant=\"outlined\"\r\n                                                name=\"timeHours\"\r\n                                                value={timeHours}\r\n                                                onChange={handleInputChange}\r\n                                                label=\"Horas\"\r\n                                                type=\"number\"\r\n                                                onBlur={editActivity}\r\n                                                inputProps={{\r\n                                                    min: 0,\r\n                                                    max: 59\r\n                                                }}\r\n                                                fullWidth\r\n                                            />\r\n                                            <Typography style={{ marginLeft: 10, marginRight: 10 }}> : </Typography>\r\n                                            <TextField\r\n                                                margin=\"dense\"\r\n                                                variant=\"outlined\"\r\n                                                name=\"timeMinutes\"\r\n                                                value={timeMinutes}\r\n                                                onChange={handleInputChange}\r\n                                                label=\"Minutos\"\r\n                                                type=\"number\"\r\n                                                onBlur={editActivity}\r\n                                                inputProps={{\r\n                                                    min: 0,\r\n                                                    max: 59\r\n                                                }}\r\n                                                fullWidth\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} className={classes.grid}>\r\n                                        <FormControl variant='outlined' size='small' style={{width: '90%', marginRight: 5}}>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" style={{marginBottom: 4, marginRight: 5}}> Formato </Typography>\r\n                                            <Select\r\n                                                name='format'\r\n                                                value={format}\r\n                                                onChange={handleChangeDropdown}\r\n                                            >\r\n                                                <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                                <MenuItem value={'Grupal'}> Grupal</MenuItem>\r\n                                                <MenuItem value={'Individual'}> Individual</MenuItem>\r\n                                                <MenuItem value={'Toda la clase'}> Toda la clase</MenuItem>\r\n                                            </Select>    \r\n                                        </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container className={classes.activitySpacingDescription}>\r\n                                <Grid item sm={11}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" > Descripción </Typography>\r\n                                    <Grid className={classes.activitySpacingDescriptionBD}>\r\n                                        <TextField\r\n                                            multiline\r\n                                            margin='dense'\r\n                                            variant=\"outlined\"\r\n                                            name=\"description\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"text\"\r\n                                            onBlur={editActivity}\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listActivitiesArray()\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\LearningResult.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":10,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"230","line":2,"column":28,"nodeType":"228","messageId":"229","endLine":2,"endColumn":36},{"ruleId":"226","severity":1,"message":"230","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]