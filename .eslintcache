[{"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js":"1","E:\\Github\\Learning-Activity-Designer-App\\src\\App.js":"2","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js":"3","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js":"4","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\UiContext.js":"5","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\DesignContext.js":"6","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SharedDocContext.js":"7","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js":"8","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\uiReducer.js":"9","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\designReducer.js":"10","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js":"11","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js":"12","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js":"13","E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js":"14","E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js":"15","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js":"16","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js":"17","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ConfirmationModal.js":"18","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignPageReader.js":"19","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js":"20","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SharedLink\\SharedLinkPage.js":"21","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\MyDesignsPage.js":"22","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\SharedWithMe\\SharedWithMePage.js":"23","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\PublicRepository\\PublicRepositoryPage.js":"24","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\UserProfile.js":"25","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\SearchUsersPage\\SearchUsersPage.js":"26","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js":"27","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\FolderModal.js":"28","E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js":"29","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js":"30","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js":"31","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js":"32","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js":"33","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\DesignReader.js":"34","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\index.js":"35","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js":"36","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js":"37","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js":"38","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\ShowContactsModal.js":"39","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\EditProfileModal.js":"40","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js":"41","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\LeftPanel.js":"42","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\KeywordManager.js":"43","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\RecentDesigns.js":"44","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\DesignsBreadcrumbs.js":"45","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js":"46","E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js":"47","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\DesignMetadata.js":"48","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\DesignWorkspace.js":"49","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js":"50","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js":"51","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\LearningActivityReader.js":"52","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ShareModal.js":"53","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js":"54","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\design.js":"55","E:\\Github\\Learning-Activity-Designer-App\\src\\types\\ui.js":"56","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PieGraphic.js":"57","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js":"58","E:\\Github\\Learning-Activity-Designer-App\\src\\assets\\resource\\items.js":"59","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js":"60","E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useHorizontalScroll.js":"61","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js":"62","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js":"63","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResultModal.js":"64","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResult.js":"65","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\LearningActivity.js":"66","E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js":"67","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\SharedTextFieldTipTapEditor.js":"68","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js":"69","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\PDF\\ViewAndDownloadPDFModal.js":"70","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\TaskReader.js":"71","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\RightClickMenu.js":"72","E:\\Github\\Learning-Activity-Designer-App\\src\\components\\CustomMenu.js":"73","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\PDF\\DocumentPDF.js":"74","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomVerbList.js":"75","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomPiramid.js":"76","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\Task.js":"77","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLinks.js":"78","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLinksModal.js":"79","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLink.js":"80"},{"size":204,"mtime":1615837840022,"results":"81","hashOfConfig":"82"},{"size":1158,"mtime":1617384096793,"results":"83","hashOfConfig":"82"},{"size":2729,"mtime":1615837852224,"results":"84","hashOfConfig":"82"},{"size":1091,"mtime":1615837852224,"results":"85","hashOfConfig":"82"},{"size":1212,"mtime":1618524453692,"results":"86","hashOfConfig":"82"},{"size":867,"mtime":1615837852225,"results":"87","hashOfConfig":"82"},{"size":2183,"mtime":1618505823830,"results":"88","hashOfConfig":"82"},{"size":4219,"mtime":1618505823834,"results":"89","hashOfConfig":"82"},{"size":1636,"mtime":1618521388064,"results":"90","hashOfConfig":"82"},{"size":6683,"mtime":1618420733676,"results":"91","hashOfConfig":"82"},{"size":1199,"mtime":1615837852226,"results":"92","hashOfConfig":"82"},{"size":1331,"mtime":1615837852240,"results":"93","hashOfConfig":"82"},{"size":705,"mtime":1615837840030,"results":"94","hashOfConfig":"82"},{"size":651,"mtime":1615837840030,"results":"95","hashOfConfig":"82"},{"size":1380,"mtime":1615837852224,"results":"96","hashOfConfig":"82"},{"size":620,"mtime":1615837840014,"results":"97","hashOfConfig":"82"},{"size":8732,"mtime":1617833911656,"results":"98","hashOfConfig":"82"},{"size":4083,"mtime":1618506845277,"results":"99","hashOfConfig":"82"},{"size":4034,"mtime":1617815424137,"results":"100","hashOfConfig":"82"},{"size":585,"mtime":1615837852233,"results":"101","hashOfConfig":"82"},{"size":3334,"mtime":1618420733681,"results":"102","hashOfConfig":"82"},{"size":6886,"mtime":1618420733680,"results":"103","hashOfConfig":"82"},{"size":2085,"mtime":1617384096813,"results":"104","hashOfConfig":"82"},{"size":8534,"mtime":1617814812074,"results":"105","hashOfConfig":"82"},{"size":11853,"mtime":1617384096814,"results":"106","hashOfConfig":"82"},{"size":6083,"mtime":1615837852237,"results":"107","hashOfConfig":"82"},{"size":9410,"mtime":1618505823830,"results":"108","hashOfConfig":"82"},{"size":6216,"mtime":1618420733679,"results":"109","hashOfConfig":"82"},{"size":1220,"mtime":1615837840031,"results":"110","hashOfConfig":"82"},{"size":3119,"mtime":1615838097093,"results":"111","hashOfConfig":"82"},{"size":4679,"mtime":1617814812070,"results":"112","hashOfConfig":"82"},{"size":2843,"mtime":1618420733682,"results":"113","hashOfConfig":"82"},{"size":1357,"mtime":1617322229631,"results":"114","hashOfConfig":"82"},{"size":15353,"mtime":1618421036066,"results":"115","hashOfConfig":"82"},{"size":132,"mtime":1615837852240,"results":"116","hashOfConfig":"82"},{"size":472,"mtime":1615837852239,"results":"117","hashOfConfig":"82"},{"size":642,"mtime":1615837852223,"results":"118","hashOfConfig":"82"},{"size":322,"mtime":1615837840033,"results":"119","hashOfConfig":"82"},{"size":2176,"mtime":1616962368145,"results":"120","hashOfConfig":"82"},{"size":10266,"mtime":1617322229622,"results":"121","hashOfConfig":"82"},{"size":236,"mtime":1615837852239,"results":"122","hashOfConfig":"82"},{"size":2938,"mtime":1617384096812,"results":"123","hashOfConfig":"82"},{"size":3771,"mtime":1618505823829,"results":"124","hashOfConfig":"82"},{"size":2764,"mtime":1615837852236,"results":"125","hashOfConfig":"82"},{"size":2028,"mtime":1615837852235,"results":"126","hashOfConfig":"82"},{"size":960,"mtime":1618420733675,"results":"127","hashOfConfig":"82"},{"size":1011,"mtime":1618420733682,"results":"128","hashOfConfig":"82"},{"size":25957,"mtime":1618505823831,"results":"129","hashOfConfig":"82"},{"size":21106,"mtime":1618610605482,"results":"130","hashOfConfig":"82"},{"size":8600,"mtime":1615837852234,"results":"131","hashOfConfig":"82"},{"size":8479,"mtime":1617742515917,"results":"132","hashOfConfig":"82"},{"size":6024,"mtime":1617815424138,"results":"133","hashOfConfig":"82"},{"size":12747,"mtime":1618420733678,"results":"134","hashOfConfig":"82"},{"size":9665,"mtime":1618505823829,"results":"135","hashOfConfig":"82"},{"size":767,"mtime":1618420733683,"results":"136","hashOfConfig":"82"},{"size":514,"mtime":1618521491092,"results":"137","hashOfConfig":"82"},{"size":1593,"mtime":1618421036060,"results":"138","hashOfConfig":"82"},{"size":4138,"mtime":1618421036061,"results":"139","hashOfConfig":"82"},{"size":1053,"mtime":1617384096794,"results":"140","hashOfConfig":"82"},{"size":456,"mtime":1615837840017,"results":"141","hashOfConfig":"82"},{"size":643,"mtime":1617814812072,"results":"142","hashOfConfig":"82"},{"size":3066,"mtime":1615837840014,"results":"143","hashOfConfig":"82"},{"size":6436,"mtime":1618421547442,"results":"144","hashOfConfig":"82"},{"size":5611,"mtime":1615837852230,"results":"145","hashOfConfig":"82"},{"size":2895,"mtime":1615837852230,"results":"146","hashOfConfig":"82"},{"size":13269,"mtime":1618507355105,"results":"147","hashOfConfig":"82"},{"size":386,"mtime":1615837840033,"results":"148","hashOfConfig":"82"},{"size":10033,"mtime":1618505823829,"results":"149","hashOfConfig":"82"},{"size":2355,"mtime":1615837840014,"results":"150","hashOfConfig":"82"},{"size":3316,"mtime":1618421036064,"results":"151","hashOfConfig":"82"},{"size":6391,"mtime":1617815424139,"results":"152","hashOfConfig":"82"},{"size":2672,"mtime":1618420733675,"results":"153","hashOfConfig":"82"},{"size":2141,"mtime":1618420733673,"results":"154","hashOfConfig":"82"},{"size":14740,"mtime":1618421036064,"results":"155","hashOfConfig":"82"},{"size":1721,"mtime":1615837852227,"results":"156","hashOfConfig":"82"},{"size":2561,"mtime":1615837852227,"results":"157","hashOfConfig":"82"},{"size":23830,"mtime":1618606114638,"results":"158","hashOfConfig":"82"},{"size":8812,"mtime":1618607934148,"results":"159","hashOfConfig":"82"},{"size":4872,"mtime":1618612818952,"results":"160","hashOfConfig":"82"},{"size":4126,"mtime":1618612871580,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"lsv2he",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"164"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"315"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"164"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"164"},"E:\\Github\\Learning-Activity-Designer-App\\src\\index.js",[],["328","329"],"E:\\Github\\Learning-Activity-Designer-App\\src\\App.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\AuthContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SocketContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\UiContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\DesignContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\SharedDocContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\AppRouter.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\ui\\uiReducer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\design\\designReducer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useSocket.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\fetch.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PrivateRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\router\\PublicRoute.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\contexts\\UserConfigContext.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Footer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\NavBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ConfirmationModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignPageReader.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LandingPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\SharedLink\\SharedLinkPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\MyDesignsPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\SharedWithMe\\SharedWithMePage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\PublicRepository\\PublicRepositoryPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\UserProfile.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\SearchUsersPage\\SearchUsersPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\DesignPage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\FolderModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\theme\\theme.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\UserCard.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\DesignService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\UserService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\DesignReader.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\index.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\BloomService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\TabPanel.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\textFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\ShowContactsModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\User\\UserProfile\\EditProfileModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\CategoryService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\LeftPanel.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\KeywordManager.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\RecentDesigns.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\Navigation\\MyDesigns\\DesignsBreadcrumbs.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\FoldersContainer.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\services\\FolderService.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\DesignMetadata.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\DesignWorkspace.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\RegisterModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\LandingPage\\LoginModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\LearningActivityReader.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ShareModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\Design.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\design.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\types\\ui.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\PieGraphic.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\StackedBar.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\assets\\resource\\items.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useForm.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\hooks\\useHorizontalScroll.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignSkeleton.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\DesignsFolder.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResultModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\LearningResult.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\LearningActivity.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\utils\\timeFormatters.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\SharedTextFieldTipTapEditor.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\ModalFormWithImage.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\PDF\\ViewAndDownloadPDFModal.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPageReader\\DesignReader\\TaskReader.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\RightClickMenu.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\components\\CustomMenu.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\PDF\\DocumentPDF.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomVerbList.js",[],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Metadata\\BloomPiramid.js",[],["330","331"],"E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\Task.js",["332"],"import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\r\nimport { IconButton, makeStyles, Typography, Tooltip, Paper, MenuItem, FormControl, Select, TextField, Box, InputLabel, useTheme, useMediaQuery, Fab, Button } from '@material-ui/core';\r\nimport { useSocketState } from 'contexts/SocketContext';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { useDesignState } from 'contexts/design/DesignContext';\r\nimport { SharedTextFieldTipTapEditor } from 'components/SharedTextFieldTipTapEditor';\r\nimport { useUiState } from 'contexts/ui/UiContext';\r\nimport types from 'types';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Delete } from '@material-ui/icons';\r\n//import ObjectID from 'bson-objectid';\r\n//import { ResourceLinks } from './ResourceLinks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    trashIcon: {\r\n        display: 'flex',\r\n    },\r\n    tasksSpacing: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: theme.spacing(1),\r\n        background: theme.palette.background.workSpace\r\n    },\r\n    taskBody: {\r\n        padding: 10,\r\n        position: 'relative',\r\n        left: '5%',\r\n        width: '95%',\r\n        height: '100%',\r\n    },\r\n    taskSpacingDescription: {\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    taskSpacingDescriptionBD: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    colorLearningType: {\r\n        position: 'absolute',\r\n        width: '5%',\r\n        height: '100%',\r\n    },\r\n    timeField: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginRight: 0,\r\n        },\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    gridContainer: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '50% 50%',\r\n        gridTemplateRows: 'auto',\r\n        gridTemplateAreas: `\r\n            'learningType modality'\r\n            'workingTime format'\r\n            'description description'`,\r\n        [theme.breakpoints.down('md')]: {\r\n            gridTemplateAreas: `\r\n                'learningType learningType'\r\n                'modality modality'\r\n                'format format'\r\n                'workingTime workingTime'\r\n                'description description'`,\r\n        },\r\n    },\r\n    firstRow: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto auto 10%',\r\n        gridTemplateRows: 'auto',\r\n        gridTemplateAreas: `'learningType modality'`,\r\n    },\r\n    learningTypeContainer:{\r\n        gridArea: 'learningType',\r\n        width: '100%',\r\n        display: 'flex',\r\n    },\r\n    learningType:{\r\n        marginRight: 10,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginRight: 0,\r\n            marginTop: 10,\r\n        },\r\n    },\r\n    modality: {\r\n        gridArea: 'modality',\r\n        width: '100%',\r\n        display: 'flex',\r\n        [theme.breakpoints.down('md')]: {\r\n            marginTop: 10,\r\n        },\r\n    },\r\n    format: {\r\n        gridArea: 'format',\r\n        alignSelf: 'flex-end',\r\n        [theme.breakpoints.down('md')]: {\r\n            marginTop: 10,\r\n        },\r\n    },\r\n    delete: {\r\n        alignSelf: 'flex-start',\r\n        justifySelf: 'center',\r\n    },\r\n    resourceLinkGrid:{\r\n        display: 'grid',\r\n        gridTemplateColumns: '25% 75%',\r\n    },\r\n    fab: {\r\n        maxHeight: \"20px\",\r\n        minHeight: \"20px\",\r\n        minWidth: \"20px\",\r\n        maxWidth: \"20px\",\r\n    },\r\n    icon:{\r\n        maxHeight: \"15px\",\r\n        minHeight: \"15px\",\r\n        minWidth: \"15px\",\r\n        maxWidth: \"15px\",\r\n    }\r\n}));\r\n\r\nexport const Task = forwardRef(({ learningActivityIndex, index, task, ...rest }, ref) => {\r\n    const classes = useStyles();\r\n    const { socket } = useSocketState();\r\n    const isMounted = useRef(true);\r\n    const hoursRef = useRef();\r\n    const minutesRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const { designState } = useDesignState();\r\n    const { design } = designState;\r\n    const { dispatch } = useUiState();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const theme = useTheme();\r\n    const isMediumDevice = useMediaQuery(theme.breakpoints.down('md'));\r\n    //const resourceLinksRefs = useRef([]);\r\n\r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        description: task.description,\r\n        learningType: task.learningType && task.learningType.trim() !== '' ? task.learningType : 'Seleccionar',\r\n        modality: task.modality && task.modality.trim() !== '' ? task.modality : 'Seleccionar',\r\n        format: task.format && task.format.trim() !== '' ? task.format : 'Seleccionar',\r\n        timeHours: task.duration.hours ?? 0,\r\n        timeMinutes: task.duration.minutes ?? 0,\r\n    });\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            clearTexts: () => {\r\n                hoursRef?.current.clearText();\r\n                minutesRef?.current.clearText();\r\n                descriptionRef?.current.clearText();\r\n            }\r\n        }),\r\n    );\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.description !== task.description) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    description: task.description,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.description, task.description, setValues]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.learningType !== task.learningType) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    learningType: task.learningType && task.learningType.trim() !== '' ? task.learningType : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.learningType, task.learningType, setValues]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.modality !== task.modality) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    modality: task.modality && task.modality.trim() !== '' ? task.modality : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.modality, task.modality, setValues]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.format !== task.format) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    format: task.format && task.format.trim() !== '' ? task.format : 'Seleccionar',\r\n                }));\r\n            }\r\n        }\r\n    }, [form.format, task.format, setValues]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.timeHours !== task.duration.hours) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    timeHours: task.duration.hours ?? 0,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.timeHours, task.duration.hours, setValues]);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            if (form.timeMinutes !== task.duration.minutes) {\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    timeMinutes: task.duration.minutes ?? 0,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.timeMinutes, task.duration.minutes, setValues]);\r\n\r\n    const { description, learningType, modality, format, timeHours, timeMinutes, } = form;\r\n\r\n    const handleEditTaskField = ({ target }) => {\r\n        let { name: field, value } = target;\r\n        let subfield = null;\r\n        if (field.includes('description')) field = 'description';\r\n        else if (field.includes('timeHours')) {\r\n            field = 'duration';\r\n            subfield = 'hours';\r\n            value = isNaN(value) ? 0 : value;\r\n        } else if (field.includes('timeMinutes')) {\r\n            field = 'duration';\r\n            subfield = 'minutes';\r\n            value = isNaN(value) ? 0 : value;\r\n        }\r\n        handleInputChange({ target });\r\n        socket.emit('edit-task-field', { designId: design._id, learningActivityIndex, index, field, value, subfield });\r\n    };\r\n\r\n    //const handleAddResource = () => {\r\n    //    const id = ObjectID().toString();\r\n    //    socket.emit('new-resource-link', { designId: design._id, learningActivityIndex, index, id});\r\n    //};\r\n\r\n    const handleOpenResourceModal = () => {\r\n        dispatch({\r\n            type: types.ui.setResourceLink,\r\n            payload: {\r\n                learningActivityIndex: learningActivityIndex,\r\n                taskIndex: index,\r\n            },\r\n        });\r\n        dispatch({\r\n            type: types.ui.toggleModal,\r\n            payload: 'Resource',\r\n        });\r\n    }\r\n\r\n    const handleDeleteTask = (index) => {\r\n        if (description === \"\" && learningType === 'Seleccionar' && modality === 'Seleccionar' && format === 'Seleccionar' && timeHours === 0 && timeMinutes === 0) {\r\n            hoursRef?.current?.clearText();\r\n            minutesRef?.current?.clearText();\r\n            descriptionRef?.current?.clearText();\r\n            socket.emit('delete-task', { designId: design._id, learningActivityIndex, index });\r\n            enqueueSnackbar('Su tarea se ha eliminado', { variant: 'success', autoHideDuration: 2000 });\r\n        } else {\r\n            dispatch({\r\n                type: types.ui.setConfirmData,\r\n                payload: {\r\n                    type: 'tarea',\r\n                    args: { designId: design._id, learningActivityIndex, index },\r\n                    actionMutation: null,\r\n                }\r\n            })\r\n            dispatch({\r\n                type: types.ui.toggleModal,\r\n                payload: 'Confirmation',\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleChangeDropdown = (e) => {\r\n        handleInputChange(e);\r\n        socket.emit('edit-task-field', { designId: design._id, learningActivityIndex, index, field: e.target.name, value: e.target.value, subfield: null });\r\n    };\r\n\r\n    const listTasksArray = () => {\r\n        return (\r\n            <Box key={index} style={{ height: '100%' }}>\r\n                <Paper square className={classes.tasksSpacing}>\r\n                    <Box style={{ display: 'flex', position: 'relative', height: '100%', width: '100%' }}>\r\n                        {(() => {\r\n                            if (task.learningType === 'Investigación') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#57A8E7' }}></Box>\r\n                                )\r\n                            } else if (task.learningType === 'Adquisición') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#E95D5D' }}></Box>\r\n                                )\r\n                            } else if (task.learningType === 'Producción') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#C8951F' }}></Box>\r\n                                )\r\n                            } else if (task.learningType === 'Discusión') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#087A4C' }}></Box>\r\n                                )\r\n                            } else if (task.learningType === 'Colaboración') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#DFDF3F' }}></Box>\r\n                                )\r\n                            } else if (task.learningType === 'Práctica') {\r\n                                return (\r\n                                    <Box className={classes.colorLearningType} style={{ backgroundColor: '#A75BCD' }}></Box>\r\n                                )\r\n                            }\r\n                        })()}\r\n                        <div className={classes.taskBody}>\r\n                            <div className={classes.gridContainer}>\r\n                                <div className={classes.learningTypeContainer}>\r\n                                    <FormControl fullWidth variant='outlined' className={classes.learningType}>\r\n                                        <InputLabel id={`learningType-task-${index}-learningActivity-${learningActivityIndex}`}>Aprendizaje</InputLabel>\r\n                                        <Select\r\n                                            labelId={`learningType-task-${index}-learningActivity-${learningActivityIndex}`}\r\n                                            label='Aprendizaje'\r\n                                            name='learningType'\r\n                                            value={learningType}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Investigación'}> Investigación </MenuItem>\r\n                                            <MenuItem value={'Adquisición'}> Adquisición </MenuItem>\r\n                                            <MenuItem value={'Producción'}> Producción </MenuItem>\r\n                                            <MenuItem value={'Discusión'}> Discusión </MenuItem>\r\n                                            <MenuItem value={'Colaboración'}> Colaboración </MenuItem>\r\n                                            <MenuItem value={'Práctica'}> Práctica </MenuItem>\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {isMediumDevice && (<Tooltip title=\"Eliminar tarea\" className={classes.delete}>\r\n                                        <IconButton onClick={() => handleDeleteTask(index)}>\r\n                                            <Delete fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>)}\r\n                                </div>\r\n                                <div className={classes.modality}>\r\n                                    <FormControl fullWidth variant='outlined'>\r\n                                        <InputLabel id={`modality-task-${index}-learningActivity-${learningActivityIndex}`}> Modalidad </InputLabel>\r\n                                        <Select\r\n                                            labelId={`modality-task-${index}-learningActivity-${learningActivityIndex}`}\r\n                                            label='Aprendizaje'\r\n                                            name='Modalidad'\r\n                                            value={modality}\r\n                                            onChange={handleChangeDropdown}\r\n                                        >\r\n                                            <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                            <MenuItem value={'Presencial-Asíncrono'}> Presencial-Asíncrono</MenuItem>\r\n                                            <MenuItem value={'Presencial-Síncrono'}> Presencial-Síncrono</MenuItem>\r\n                                            <MenuItem value={'Online-Asíncrono'}> Online-Asíncrono</MenuItem>\r\n                                            <MenuItem value={'Online-Síncrono'}> Online-Síncrono</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {!isMediumDevice && (<Tooltip title=\"Eliminar tarea\" className={classes.delete}>\r\n                                        <IconButton onClick={() => handleDeleteTask(index)}>\r\n                                            <Delete fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>)}\r\n                                </div>\r\n                                <div style={{ width: '100%', gridArea: 'workingTime', marginTop: 3 }}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom> Tiempo de trabajo </Typography>\r\n                                    <div className={classes.timeField}>\r\n                                        <TextField\r\n                                            label='Horas'\r\n                                            fullWidth\r\n                                            margin='none'\r\n                                            variant='outlined'\r\n                                            color='primary'\r\n                                            InputProps={{\r\n                                                inputComponent: SharedTextFieldTipTapEditor,\r\n                                                inputProps: {\r\n                                                    ref: hoursRef,\r\n                                                    name: `timeHours-task-${index}-learning-activity-${learningActivityIndex}`, // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                                    placeholder: 'Horas',\r\n                                                    initialvalue: timeHours,\r\n                                                    onChange: handleEditTaskField,\r\n                                                    type: 'number',\r\n                                                    min: 0,\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                        <Typography style={{ marginLeft: 10, marginRight: 10 }}> : </Typography>\r\n                                        <TextField\r\n                                            label='Minutos'\r\n                                            fullWidth\r\n                                            margin='none'\r\n                                            variant='outlined'\r\n                                            color='primary'\r\n                                            InputProps={{\r\n                                                inputComponent: SharedTextFieldTipTapEditor,\r\n                                                inputProps: {\r\n                                                    ref: minutesRef,\r\n                                                    name: `timeMinutes-task-${index}-learning-activity-${learningActivityIndex}`, // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                                    placeholder: 'Minutos',\r\n                                                    initialvalue: timeMinutes,\r\n                                                    onChange: handleEditTaskField,\r\n                                                    type: 'number',\r\n                                                    min: 0,\r\n                                                    max: 59,\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <FormControl fullWidth={isMediumDevice} variant='outlined' className={classes.format}>\r\n                                    <InputLabel id={`format-task-${index}-learningActivity-${learningActivityIndex}`}> Formato </InputLabel>\r\n                                    <Select\r\n                                        labelId={`format-task-${index}-learningActivity-${learningActivityIndex}`}\r\n                                        label='Formato'\r\n                                        name='format'\r\n                                        value={format}\r\n                                        onChange={handleChangeDropdown}\r\n                                    >\r\n                                        <MenuItem value={'Seleccionar'}> Seleccionar </MenuItem>\r\n                                        <MenuItem value={'Grupal'}> Grupal</MenuItem>\r\n                                        <MenuItem value={'Individual'}> Individual</MenuItem>\r\n                                        <MenuItem value={'Toda la clase'}> Toda la clase</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField\r\n                                    style={{ gridArea: 'description', marginTop: 10, }}\r\n                                    label='Descripción'\r\n                                    fullWidth\r\n                                    margin='none'\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    InputProps={{\r\n                                        inputComponent: SharedTextFieldTipTapEditor,\r\n                                        inputProps: {\r\n                                            ref: descriptionRef,\r\n                                            name: `description-task-${index}-learning-activity-${learningActivityIndex}`, // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                            placeholder: 'Descripción',\r\n                                            initialvalue: description,\r\n                                            onChange: handleEditTaskField,\r\n                                            multiline: true,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div style={{marginTop: 20}}>\r\n                                <Button variant={'outlined'} onClick={handleOpenResourceModal}> Administrar recursos</Button>\r\n                                {/*\r\n                                <div className={classes.resourceLinkGrid}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" > Enlace de Recursos </Typography>\r\n                                    <Tooltip title='Agregar recurso' arrow>\r\n                                        <Fab aria-label='add-resource-link' className= {classes.fab} color='primary' onClick={handleAddResource} >\r\n                                            <Add className={classes.icon}/>\r\n                                        </Fab>\r\n                                    </Tooltip>\r\n                                </div>\r\n                                {design.data.learningActivities[learningActivityIndex] && design.data.learningActivities[learningActivityIndex].tasks && design.data.learningActivities[learningActivityIndex].tasks[index].resourceLinks && design.data.learningActivities[learningActivityIndex].tasks[index].resourceLinks.map((resourceLink, i)=> <ResourceLinks ref={(ref) => resourceLinksRefs.current.push(ref)} key={`resourceLink-${i}-task-${index}-learningActivity-${learningActivityIndex}`} index={i} resourceLink={resourceLink} taskIndex={index} learningActivityIndex= {learningActivityIndex} /> ) \r\n                                */}\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                </Paper>\r\n            </Box >\r\n        )\r\n    }\r\nreturn (\r\n    <>\r\n        {\r\n            listTasksArray()\r\n        }\r\n    </>\r\n)\r\n})\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLinks.js",["333"],"import { Box, Grid, IconButton, makeStyles, Paper, TextField, Tooltip, Typography, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons';\r\nimport { SharedTextFieldTipTapEditor } from 'components/SharedTextFieldTipTapEditor';\r\nimport { useDesignState } from 'contexts/design/DesignContext';\r\nimport { useSocketState } from 'contexts/SocketContext';\r\nimport { useUiState } from 'contexts/ui/UiContext';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react'\r\nimport types from 'types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    spaceResource:{\r\n        marginBottom: theme.spacing(3),\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    spacePaper:{\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    spaceInResource:{\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },buttonPos: {\r\n        marginLeft: \"auto\",\r\n    }, grid:{\r\n        [theme.breakpoints.down('md')]: {\r\n            gridTemplateAreas: `\r\n                'title title'\r\n                'link link'`,\r\n        },\r\n    },\r\n    tooltip: {\r\n        maxHeight: \"20px\",\r\n        minHeight: \"20px\",\r\n        minWidth: \"20px\",\r\n        maxWidth: \"20px\",\r\n    },\r\n    icon:{\r\n        maxHeight: \"20px\",\r\n        minHeight: \"20px\",\r\n        minWidth: \"20px\",\r\n        maxWidth: \"20px\",\r\n    },\r\n    delete: {\r\n        display: 'flex',\r\n        alignItems: 'end',\r\n    },\r\n}));\r\n\r\nexport const ResourceLinks = forwardRef(({index, resourceLink, taskIndex, learningActivityIndex, ...rest }, ref) => {\r\n    const classes = useStyles()\r\n    const isMounted = useRef(true);\r\n    const titleRef = useRef();\r\n    const linkRef = useRef();\r\n    const { socket } = useSocketState();\r\n    const { designState } = useDesignState();\r\n    const { design } = designState;\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const { dispatch } = useUiState();\r\n    const theme = useTheme();\r\n    const isMediumDevice = useMediaQuery(theme.breakpoints.down('md'));\r\n    \r\n    const [form, handleInputChange, , setValues] = useForm({\r\n        title: resourceLink.title,\r\n        link: resourceLink.link\r\n    });\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            clearTexts: () => {\r\n                titleRef?.current.clearText();\r\n                linkRef?.current.clearText();\r\n            }\r\n        }),\r\n    );\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.title !== resourceLink.title){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    title: resourceLink.title,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.title, resourceLink.title, setValues]);\r\n\r\n    useEffect(() => {\r\n        if(isMounted.current){\r\n            if(form.link !== resourceLink.link){\r\n                setValues((prevState) => ({\r\n                    ...prevState,\r\n                    link: resourceLink.link,\r\n                }));\r\n            }\r\n        }\r\n    }, [form.link, resourceLink.link, setValues]);\r\n\r\n    const { title, link,  } = form;\r\n\r\n    const handleEditTaskField = ({ target }) => {\r\n        let { name: field, value } = target;\r\n        let subfield = null;\r\n        if(field.includes('title')) field = 'title';\r\n        else if (field.includes('link')) field = 'link';\r\n        handleInputChange({ target });\r\n        socket.emit('edit-resource-link-field', { designId: design._id, learningActivityIndex, taskIndex, index, field, value, subfield });\r\n    };\r\n\r\n    const handleDeleteResourceLink = (index) => {\r\n        if (title === \"\" && link === \"\" ){\r\n            //titleRef?.current.clearText();\r\n            //linkRef?.current.clearText();\r\n            socket.emit('delete-resource-link', { designId: design._id, learningActivityIndex, taskIndex, index });\r\n            enqueueSnackbar('Su recurso se ha eliminado',  {variant: 'success', autoHideDuration: 2000});\r\n        } else {\r\n            dispatch({\r\n                type: types.ui.setConfirmData,\r\n                payload: {\r\n                    type: 'recurso',\r\n                    args: { designId: design._id, learningActivityIndex, taskIndex, index },\r\n                    actionMutation: null,\r\n                }\r\n            })\r\n            dispatch({\r\n                type: types.ui.toggleModal,\r\n                payload: 'Confirmation',\r\n            });\r\n        }\r\n    };\r\n\r\n    const listResourceArray = () => {\r\n        return (\r\n            <Grid key={index} >\r\n                <Paper square className = {classes.spacePaper}>\r\n                    <Grid container className={classes.spaceResource}>\r\n                        <Grid item sm={11} className={classes.spaceInResource}>\r\n                            <Grid container>\r\n                                <Grid item xs = {11}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\">Recurso número {index + 1}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs = {1} >\r\n                                    <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                                        <Box>\r\n                                        <Tooltip title=\"Eliminar recurso\" className= {classes.tooltip}>\r\n                                            <IconButton onClick={() => handleDeleteResourceLink(index)}>\r\n                                                <Delete className={classes.icon} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                            <div className={classes.grid}>\r\n                                <TextField\r\n                                    style={{ gridArea: 'title', marginTop: 10, }}\r\n                                    label='Título'\r\n                                    fullWidth\r\n                                    margin='none'\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    InputProps={{\r\n                                        inputComponent: SharedTextFieldTipTapEditor,\r\n                                        inputProps: {\r\n                                            ref: titleRef,\r\n                                            name: `title-resourceLink-${index}-task-${taskIndex}-learningactivity-${learningActivityIndex}`, // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                            placeholder: 'Título',\r\n                                            initialvalue: title,\r\n                                            onChange: handleEditTaskField,\r\n                                            multiline: false,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    style={{ gridArea: 'link', marginTop: 10 }}\r\n                                    label='Enlace'\r\n                                    fullWidth\r\n                                    margin='none'\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    InputProps={{\r\n                                        inputComponent: SharedTextFieldTipTapEditor,\r\n                                        inputProps: {\r\n                                            ref: linkRef,\r\n                                            name: `link-resourceLink-${index}-task-${taskIndex}-learningactivity-${learningActivityIndex}`, // TODO: Cambiar y utilizar id generada en mongo como nombre de dato compartido.\r\n                                            placeholder: 'Enlace',\r\n                                            initialvalue: link,\r\n                                            onChange: handleEditTaskField,\r\n                                            multiline: false,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper> \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            {\r\n                listResourceArray()\r\n            }\r\n        </>\r\n    )\r\n})\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLinksModal.js",["334","335","336","337","338","339","340"],"import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Fab, Grid, IconButton, ListItem, makeStyles, TextField, Tooltip, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport types from 'types';\r\nimport { useUiState } from 'contexts/ui/UiContext';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDesignState } from 'contexts/design/DesignContext';\r\nimport { Add } from '@material-ui/icons';\r\nimport { ResourceLink } from './ResourceLink';\r\nimport { useSocketState } from 'contexts/SocketContext';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    spaceInit:{\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },buttonZone: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexWrap: 'wrap',\r\n        },\r\n    },resourceZone: {\r\n        height: 'auto',\r\n        [theme.breakpoints.up('xs')]: {\r\n            height: '90%',\r\n            overflow: 'auto',\r\n            overflowX: 'hidden',\r\n        },\r\n    },contentSpace:{\r\n        height: 'auto',\r\n        paddingBottom: theme.spacing(6),\r\n        [theme.breakpoints.up('xs')]: {\r\n            height: 'calc(100vh - 500px)',\r\n            overflow: 'auto'\r\n        },\r\n    }\r\n}));\r\n\r\nexport const ResourceLinksModal = () => {\r\n    const classes = useStyles();\r\n    const { uiState, dispatch } = useUiState();\r\n    const { learningActivityIndex, taskIndex } = uiState.resourceLink;\r\n    const { designState } = useDesignState();\r\n    const { design } = designState;\r\n    const [newResource, setNewResource] = useState([...design.data.learningActivities[learningActivityIndex].tasks[taskIndex].resourceLinks]);\r\n    const { socket } = useSocketState();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleClose = () => {\r\n        setNewResource([...design.data.learningActivities[learningActivityIndex].tasks[taskIndex].resourceLinks]);\r\n        dispatch({\r\n            type: types.ui.setResourceLink,\r\n            payload: {\r\n                learningActivityIndex: null,\r\n                taskIndex: null,\r\n            }\r\n        });\r\n        dispatch({\r\n            type: types.ui.toggleModal,\r\n            payload: 'Resource',\r\n        });\r\n    };\r\n    \r\n    const handleAddResource = () =>{\r\n        const newLinks = {\r\n            title: '',\r\n            link: '',\r\n        }\r\n        setNewResource([...newResource, newLinks]);\r\n    };\r\n\r\n    const handleAddResourceInDesign = () =>{\r\n        socket.emit('change-resource-in-task', { designId: design._id, learningActivityIndex, taskIndex, resources: [...newResource] });\r\n        dispatch({\r\n            type: types.ui.toggleModal,\r\n            payload: 'Resource'\r\n        });\r\n        enqueueSnackbar('Se ha agregado su recurso correctamente', { variant: 'success', autoHideDuration: 2000 });\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} open={uiState.isResourceModalOpen} fullWidth={true} maxWidth={'md'} >\r\n                <DialogTitle >\r\n                    Administrar Recursos\r\n                </DialogTitle>\r\n                <IconButton aria-label='close' className={classes.closeButton} onClick={handleClose}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    <Grid className={classes.contentSpace}>\r\n                        <div className={classes.buttonZone}>\r\n                            <Button variant={'outlined'} color = {'primary'} onClick = {handleAddResource}>Agregar recurso</Button>\r\n                        </div>\r\n                        <Box className={classes.resourceZone}>\r\n                            <Box >\r\n                            {\r\n                                newResource.map((resource, i) => <ResourceLink key={`resource-${i}-task-${taskIndex}-learningActivity-${learningActivityIndex}`} index={i} resource = {resource} newResource={newResource} setNewResource={setNewResource}/>)\r\n                            }\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions >\r\n                    <Button onClick={handleClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button variant='contained' color='primary' onClick={handleAddResourceInDesign}>\r\n                        Guardar recursos\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Github\\Learning-Activity-Designer-App\\src\\pages\\DesignPage\\Workspace\\ResourceLink.js",["341"],"import { Box, Divider, Grid, IconButton, makeStyles, TextField, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    spaceResource:{\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    tooltip: {\r\n        maxHeight: \"25px\",\r\n        minHeight: \"25px\",\r\n        minWidth: \"25px\",\r\n        maxWidth: \"25px\",\r\n    },\r\n    icon:{\r\n        maxHeight: \"25px\",\r\n        minHeight: \"25px\",\r\n        minWidth: \"25px\",\r\n        maxWidth: \"25px\",\r\n    },\r\n    resourceLinkGrid:{\r\n        display: 'grid',\r\n        gridTemplateColumns: '95% 5%',\r\n    },\r\n}));\r\n\r\nexport const ResourceLink = ({index, resource, newResource, setNewResource}) => {\r\n    const classes = useStyles();\r\n\r\n    const changeTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        setNewResource( newResource => newResource.map((resource, i) => {\r\n            if ( i === index ) {\r\n                resource.title = newTitle;\r\n            }\r\n            return resource;\r\n        }));\r\n    };\r\n\r\n    const changeLink = (event) => {\r\n        const newLink = event.target.value;\r\n        setNewResource( newResource => newResource.map((resource, i) => {\r\n            if ( i === index ) {\r\n                resource.link = newLink;\r\n            }\r\n            return resource;\r\n        }));\r\n    };\r\n    \r\n    const handleDeleteResourceLink = (index) =>{\r\n        if (index === newResource.length - 1) {\r\n            setNewResource([\r\n                ...newResource.slice(0, index),\r\n            ])\r\n        } else {\r\n            setNewResource([\r\n                ...newResource.slice(0, index),\r\n                ...newResource.slice(index + 1, newResource.length)\r\n            ])\r\n        };\r\n    };\r\n\r\n    const resourceLink = () =>{\r\n        return (\r\n            <div key={index} className={classes.spaceResource}>\r\n                <Grid >\r\n                    <div className={classes.resourceLinkGrid}>\r\n                        <div >\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='dense' \r\n                                name='title' \r\n                                value={ resource.title } \r\n                                onChange={ (e) => changeTitle(e) } \r\n                                label='Título' \r\n                                type='text' \r\n                                fullWidth \r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='dense' \r\n                                name='link' \r\n                                value={ resource.link } \r\n                                onChange={ (e)=>changeLink(e)} \r\n                                label='Enlace' \r\n                                type='text' \r\n                                fullWidth \r\n                            />\r\n                        </div>\r\n                        <div>\r\n                        <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                                    <Box>\r\n                                        <Tooltip title=\"Eliminar recurso\" className= {classes.tooltip}>\r\n                                            <IconButton onClick={() => handleDeleteResourceLink(index)}>\r\n                                                <Delete className={classes.icon} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                </Box>\r\n                        </div>\r\n                    </div>\r\n                <Divider style={{marginTop: 10}}/>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                resourceLink()\r\n            }\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"342","replacedBy":"346"},{"ruleId":"344","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":2,"column":146,"nodeType":"350","messageId":"351","endLine":2,"endColumn":149},{"ruleId":"348","severity":1,"message":"352","line":63,"column":11,"nodeType":"350","messageId":"351","endLine":63,"endColumn":25},{"ruleId":"348","severity":1,"message":"353","line":1,"column":74,"nodeType":"350","messageId":"351","endLine":1,"endColumn":81},{"ruleId":"348","severity":1,"message":"349","line":1,"column":83,"nodeType":"350","messageId":"351","endLine":1,"endColumn":86},{"ruleId":"348","severity":1,"message":"354","line":1,"column":106,"nodeType":"350","messageId":"351","endLine":1,"endColumn":114},{"ruleId":"348","severity":1,"message":"355","line":1,"column":128,"nodeType":"350","messageId":"351","endLine":1,"endColumn":137},{"ruleId":"348","severity":1,"message":"356","line":1,"column":139,"nodeType":"350","messageId":"351","endLine":1,"endColumn":146},{"ruleId":"348","severity":1,"message":"357","line":1,"column":148,"nodeType":"350","messageId":"351","endLine":1,"endColumn":158},{"ruleId":"348","severity":1,"message":"358","line":7,"column":10,"nodeType":"350","messageId":"351","endLine":7,"endColumn":13},{"ruleId":"348","severity":1,"message":"357","line":1,"column":74,"nodeType":"350","messageId":"351","endLine":1,"endColumn":84},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],["359"],["360"],"no-unused-vars","'Fab' is defined but never used.","Identifier","unusedVar","'isMediumDevice' is assigned a value but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'TextField' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.","'Add' is defined but never used.","no-global-assign","no-unsafe-negation"]